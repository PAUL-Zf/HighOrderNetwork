{"remainingRequest":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\src\\components\\TextView\\TextView.js?vue&type=script&lang=js&","dependencies":[{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\src\\components\\TextView\\TextView.js","mtime":1642926995337},{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/College/毕业论文/cityAnalysis-master/frontend/src/components/TextView/TextView.js"],"names":["d3Lasso","d3","dataService","name","components","props","data","content","watch","user","val","display","date","response","console","log","mounted","methods"],"mappings":"AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAZ,MAAyB,gCAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,eAAe;AACXC,EAAAA,IAAI,EAAE,UADK;AAEXC,EAAAA,UAAU,EAAE,EAFD;AAKXC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,CALI;;AAMXC,EAAAA,IAAI,GAAG;AACH,WAAO;AACHC,MAAAA,OAAO,EAAE;AADN,KAAP;AAGH,GAVU;;AAYXC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,IAAI,CAACC,GAAD,EAAM;AACNR,MAAAA,WAAW,CAACS,OAAZ,CAAoB,KAAKF,IAAzB,EAA+B,KAAKG,IAApC,EAA0CC,QAAQ,IAAI;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACP,IAArB;AACA,aAAKC,OAAL,GAAeM,QAAQ,CAACP,IAAxB;AACH,OAHD;AAIH,KAPE;;AASHM,IAAAA,IAAI,CAACF,GAAD,EAAM;AACNR,MAAAA,WAAW,CAACS,OAAZ,CAAoB,KAAKF,IAAzB,EAA+B,KAAKG,IAApC,EAA0CC,QAAQ,IAAI;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACP,IAArB;AACA,aAAKC,OAAL,GAAeM,QAAQ,CAACP,IAAxB;AACH,OAHD;AAIH,KAdE,CAgBH;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjCG,GAZI;AAgDXU,EAAAA,OAAO,EAAE,YAAY,CACjB;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACH,GA3DU;AA4DXC,EAAAA,OAAO,EAAC,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7HI;AA5DG,CAAf","sourcesContent":["// /* global d3 $ */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n// import pipeService from '../../service/pipeService'\n// import DrawText from './drawText.js';\n// import fetchLassoedDataPost from \"../../service/dataService.js\"\nimport * as d3Lasso from 'd3-lasso/build/d3-lasso.min.js';\nimport * as d3 from \"d3\";\nimport dataService from \"@/service/dataService\";\nexport default {\n    name: 'TextView',\n    components: {\n\n    },\n    props: ['user', 'date'],\n    data() {\n        return {\n            content: [],\n        }\n    },\n\n    watch: {\n        // new project\n        user(val) {\n            dataService.display(this.user, this.date, response => {\n                console.log(response.data);\n                this.content = response.data;\n            })\n        },\n\n        date(val) {\n            dataService.display(this.user, this.date, response => {\n                console.log(response.data);\n                this.content = response.data;\n            })\n        },\n\n        // textData: function (textData) {\n        //     this.drawText.layout(textData)\n        // }\n        // coords(newValue){\n        //     this.drawMDSLasso(newValue);\n        // },\n\n        // lassoedData(newValue){\n        //     dataService.fetchLassoedDataPost(newValue, (returnedData) => {\n        //         console.log('selectview::fetchProductViewLassoedDataPost: ', returnedData)\n        //         this.returnData = returnedData\n        //\n        //     });\n        // },\n        // returnData(newValue){\n        //     console.log(this.returnData)\n        //     this.$emit('change', this.returnData)\n        // }\n\n    },\n    mounted: function () {\n        // this.drawText = new DrawText(this.containerId)\n        // console.log(this.coords);\n        // console.log(\"this.coordsaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n\n\n        // dataService.textData('e271af20-cc49-4b8d-b034-bc8448529c67', (data) => {\n        //     this.textData = data['data']\n        //     pipeService.emitTextData(this.textData)\n        //   })\n        // console.log(this.coords);\n    },\n    methods:{\n        // drawMDSLasso: function(data) {\n        //     var myThis = this\n        //     var svg = d3.select('#MDSLasso_svg')\n        //     // var width = svg.attr('width')\n        //     let height = svg.attr('height')\n        //\n        //     let dataset = data\n        //     // let dataset = data.map((d) => d['data'])\n        //     // console.log('SimilarityView dataset successful')\n        //     // console.log('SimilarityView dataset::', dataset)\n        //\n        //     // .append('svg')\n        //\n        //     let margin = { top: 20, bottom: 20, left: 20, right: 20 }\n        //\n        //     var xScale = d3.scaleLinear()\n        //         .domain([d3.min(dataset.map((d) => d['data']), (d) => d[0]), d3.max(dataset.map((d) => d['data']), (d) => d[0])])\n        //         // .domain([-7, 7])\n        //         .range([0, height - 2 * margin.left])\n        //\n        //     var yScale = d3.scaleLinear()\n        //         .domain([d3.max(dataset.map((d) => d['data']), (d) => d[1]), d3.min(dataset.map((d) => d['data']), (d) => d[1])])\n        //         // .domain([-7, 7])\n        //         .range([0, height - 2 * margin.left])\n        //\n        //     var scatterMDS = svg.append('g')\n        //         .attr('transform', 'translate(' + margin.top + ',' + margin.left + ')')\n        //\n        //     // var circles = svg.selectAll('circle')\n        //     //     .data(data)\n        //     //     .enter()\n        //     //     .append('circle')\n        //     //     .attr('cx', d => d[0] * w)\n        //     //     .attr('cy', d => d[1] * h)\n        //     //     .attr('r', r)\n        //     var dots = scatterMDS.selectAll('circle')\n        //         .data(dataset)\n        //         .enter()\n        //         .append('circle')\n        //         .attr('cx', function(d, i) {\n        //             // let coordsData = (d) => d['data']\n        //             // console.log('coordsData::', coordsData)\n        //             return xScale(d['data'][0])\n        //         })\n        //         .attr('cy', function(d, i) {\n        //             // let coordsData = (d) => d['data']\n        //             return yScale(d['data'][1])\n        //         })\n        //         .attr('r', 1.5)\n        //         .attr('fill', function(d, i) {\n        //             // console.log('fill::data', d)\n        //\n        //                 return '#fb8072'\n        //\n        //         })\n        //\n        //     // var xAxis = d3.axisBottom()\n        //     //     .scale(xScale)\n        //     //     .ticks(7)\n        //\n        //     // var yAxis = d3.axisLeft()\n        //     //     .scale(yScale)\n        //     //     .ticks(7)\n        //     // scatterMDS.append('g')\n        //     //     .attr('class', 'axis')\n        //     //     .attr('transform', 'translate(' + 0 + ',' + (height - 2 * margin.top) + ')')\n        //     //     .call(xAxis)\n        //\n        //     // scatterMDS.append('g')\n        //     //     .attr('class', 'axis')\n        //     //     .attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n        //     //     .call(yAxis)\n        //     // Lasso functions\n        //     var lassoStart = function() {\n        //         lasso.items()\n        //             .attr('r', 1.5) // reset size\n        //             .classed('not_possible', true)\n        //             .classed('selected', false)\n        //     }\n        //     var lassoDraw = function() {\n        //         // Style the possible dots\n        //         lasso.possibleItems()\n        //             .classed('not_possible', false)\n        //             .classed('possible', true)\n        //\n        //         // Style the not possible dot\n        //         lasso.notPossibleItems()\n        //             .classed('not_possible', true)\n        //             .classed('possible', false)\n        //     }\n        //     var lassoEnd = function() {\n        //         // let lassoedData = []\n        //         // Reset the color of all dots\n        //         lasso.items()\n        //             .classed('not_possible', false)\n        //             .classed('possible', false)\n        //\n        //         // Style the selected dots\n        //         lasso.selectedItems()\n        //             .classed('selected', true)\n        //             .attr('r', 1.5)\n        //             // .attr('fill', 'blue')\n        //             .style('opacity', 1.0)\n        //         // console.log(d3.classed('selected', true).node().value)\n        //         myThis.lassoedData = lasso.selectedItems().data()\n        //         // Reset the style of the not selected dots\n        //         lasso.notSelectedItems()\n        //             .attr('r', 1.5)\n        //             .style('opacity', 0.4)\n        //         // var selected = lasso.selectedItems().filter(function(d) { return d.selected === true })\n        //         // console.log('bbb:', lasso.selectedItems()._groups[0][1])\n        //         // console.log('bbb:', lasso.selectedItems().data())\n        //\n        //     }\n        //     var lasso = d3Lasso.lasso()\n        //         .closePathSelect(true)\n        //         .closePathDistance(100)\n        //         .items(dots)\n        //         .targetArea(svg)\n        //         .on('start', lassoStart)\n        //         .on('draw', lassoDraw)\n        //         .on('end', lassoEnd)\n        //\n        //     svg.call(lasso)\n        // }\n    }\n\n}\n"]}]}