{"remainingRequest":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\src\\components\\FaceView\\drawFace.js","dependencies":[{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\src\\components\\FaceView\\drawFace.js","mtime":1641354857000},{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\College\\毕业论文\\cityAnalysis-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/College/毕业论文/cityAnalysis-master/frontend/src/components/FaceView/drawFace.js"],"names":["L","dataService","bounds"],"mappings":"AAAA;AACA;AACA,OAAOA,CAAP,MAAc,SAAd,C,CACA;AACA;;AAEA,OAAO,gCAAP;AACA,OAAO,wDAAP;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,eAAP;AACA,SAAQC,MAAR,QAAqB,8BAArsourcesContent":["/* eslint-disable */\n// /* global d3 $ */\nimport L from \"leaflet\";\n// import {pipes,points} from \"@/components/FaceView/data\";\n// import HeatmapOverlay from \"heatmap.js/plugins/leaflet-heatmap\";\n\nimport '@geoman-io/leaflet-geoman-free';\nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css';\n\nimport dataService from \"@/service/dataService\";\nimport \"leaflet-lasso\";\nimport {bounds} from \"leaflet/dist/leaflet-src.esm\";\n\n// Draw Map\n\n// export let DrawFace = function(id, data, map) {\n    // const mapElement = document.querySelector('#map');\n    // const toggleLasso = document.querySelector('#toggleLasso');\n    // const contain = document.querySelector('#contain');\n    // const intersect = document.querySelector('#intersect');\n    // const lassoEnabled = document.querySelector('#lassoEnabled');\n    // const lassoResult = document.querySelector('#lassoResult');\n\n    // var geolayer = L.geoJSON(data).addTo(map);\n\n    // let marker = L.marker(geolayer);\n    // var ciLayer = L.canvasIconLayer({}).addTo(map);\n    // ciLayer.addMarker(marker);\n\n\n\n\n\n\n    // toggleLasso.addEventListener('click', () => {\n    //     if (lassoControl.enabled()) {\n    //         lassoControl.disable();\n    //     } else {\n    //         lassoControl.enable();\n    //     }\n    // });\n\n    // contain.addEventListener('change', () => {\n    //     lassoControl.setOptions({ intersect: intersect.checked });\n    // });\n    // intersect.addEventListener('change', () => {\n    //     lassoControl.setOptions({ intersect: intersect.checked });\n    // });\n\n\n\n\n    // const mapElement = document.querySelector('#map');\n    // const toggleLasso = document.querySelector('#toggleLasso');\n    // const contain = document.querySelector('#contain');\n    // const intersect = document.querySelector('#intersect');\n    // const lassoEnabled = document.querySelector('#lassoEnabled');\n    // const lassoResult = document.querySelector('#lassoResult');\n    //\n    // const map = L.map(mapElement, { center: [0, 0], zoom: 0 });\n    // L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    //     attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    // }).addTo(map);\n    // const lassoControl = L.control.lasso().addTo(map);\n    //\n    // // the same layers as in unit test\n    // const startLatLng = [51.5, -0.11];\n    // const latDelta = 0.01;\n    // const lngDelta = latDelta * 1.75;\n    // const latSmallDelta = 0.002;\n    // const lngSmallDelta = latSmallDelta * 1.75;\n    // const markers = new Array(9).fill(undefined).map((_, i) => L.marker([startLatLng[0] + Math.floor(i / 3) * latDelta, startLatLng[1] + (i % 3) * lngDelta]));\n    // const circleMarker = L.circleMarker([startLatLng[0] + latDelta * 2, startLatLng[1] + lngDelta * 3], { radius: 21 });\n    // const circle = L.circle([startLatLng[0] + latDelta * 2, startLatLng[1] + lngDelta * 4], { radius: 250 });\n    // const polyline = (latLng => L.polyline([\n    //     [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //     [latLng[0] + latSmallDelta, latLng[1] - lngSmallDelta],\n    //     [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //     [latLng[0] - latSmallDelta, latLng[1] + lngSmallDelta],\n    // ]))([startLatLng[0] + latDelta * 1, startLatLng[1] + lngDelta * 3]);\n    // const multiPolyline = (latLng => L.polyline([\n    //     [\n    //         [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] - lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //         [latLng[0] - latSmallDelta, latLng[1] + lngSmallDelta],\n    //     ],\n    //     [\n    //         [latLng[0] - latSmallDelta / 2, latLng[1] - lngSmallDelta / 2],\n    //         [latLng[0] + latSmallDelta / 2, latLng[1] - lngSmallDelta / 2],\n    //         [latLng[0] + latSmallDelta / 2, latLng[1] + lngSmallDelta / 2],\n    //         [latLng[0] - latSmallDelta / 2, latLng[1] + lngSmallDelta / 2],\n    //     ],\n    // ]))([startLatLng[0] + latDelta * 1, startLatLng[1] + lngDelta * 4]);\n    // const rectangle = (latLng => L.rectangle([\n    //     [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //     [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    // ]))([startLatLng[0], startLatLng[1] + lngDelta * 3]);\n    // const polygon = (latLng => L.polygon([\n    //     [\n    //         [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] - lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //         [latLng[0] - latSmallDelta, latLng[1] + lngSmallDelta],\n    //     ],\n    // ]))([startLatLng[0], startLatLng[1] + lngDelta * 4]);\n    // const holedPolygon = (latLng => L.polygon([\n    //     [\n    //         [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //         [latLng[0] - latSmallDelta, latLng[1] + lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //         [latLng[0] + latSmallDelta, latLng[1] - lngSmallDelta],\n    //     ],\n    //     [\n    //         [latLng[0] - latSmallDelta / 2, latLng[1] - lngSmallDelta / 2],\n    //         [latLng[0] - latSmallDelta / 2, latLng[1] + lngSmallDelta / 2],\n    //         [latLng[0] + latSmallDelta / 2, latLng[1] + lngSmallDelta / 2],\n    //         [latLng[0] + latSmallDelta / 2, latLng[1] - lngSmallDelta / 2],\n    //     ],\n    // ]))([startLatLng[0], startLatLng[1] + lngDelta * 5]);\n    // const multiPolygon = (latLng => L.polygon([\n    //     [\n    //         [\n    //             [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //             [latLng[0] - latSmallDelta, latLng[1]],\n    //             [latLng[0], latLng[1]],\n    //             [latLng[0], latLng[1] - lngSmallDelta],\n    //         ],\n    //     ],\n    //     [\n    //         [\n    //             [latLng[0], latLng[1]],\n    //             [latLng[0], latLng[1] + lngSmallDelta],\n    //             [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //             [latLng[0] + latSmallDelta, latLng[1]],\n    //         ],\n    //     ],\n    // ]))([startLatLng[0], startLatLng[1] + lngDelta * 6]);\n    // const holedMultiPolygon = (latLng => L.polygon([\n    //     [\n    //         [\n    //             [latLng[0] - latSmallDelta, latLng[1] - lngSmallDelta],\n    //             [latLng[0] - latSmallDelta, latLng[1]],\n    //             [latLng[0], latLng[1]],\n    //             [latLng[0], latLng[1] - lngSmallDelta],\n    //         ],\n    //         [\n    //             [latLng[0] - latSmallDelta / 4 * 3, latLng[1] - lngSmallDelta / 4 * 3],\n    //             [latLng[0] - latSmallDelta / 4 * 3, latLng[1] - lngSmallDelta / 4],\n    //             [latLng[0] - latSmallDelta / 4, latLng[1] - lngSmallDelta / 4],\n    //             [latLng[0] - latSmallDelta / 4, latLng[1] - lngSmallDelta / 4 * 3],\n    //         ],\n    //     ],\n    //     [\n    //         [\n    //             [latLng[0], latLng[1]],\n    //             [latLng[0], latLng[1] + lngSmallDelta],\n    //             [latLng[0] + latSmallDelta, latLng[1] + lngSmallDelta],\n    //             [latLng[0] + latSmallDelta, latLng[1]],\n    //         ],\n    //         [\n    //             [latLng[0] + latSmallDelta / 4 * 3, latLng[1] + lngSmallDelta / 4 * 3],\n    //             [latLng[0] + latSmallDelta / 4 * 3, latLng[1] + lngSmallDelta / 4],\n    //             [latLng[0] + latSmallDelta / 4, latLng[1] + lngSmallDelta / 4],\n    //             [latLng[0] + latSmallDelta / 4, latLng[1] + lngSmallDelta / 4 * 3],\n    //         ],\n    //     ],\n    // ]))([startLatLng[0], startLatLng[1] + lngDelta * 7]);\n    // const markerClusterGroup = L.markerClusterGroup({ showCoverageOnHover: false, maxClusterRadius: 40 });\n    // markerClusterGroup.addLayers(markers);\n    // const layers = [\n    //     markerClusterGroup,\n    //     circleMarker,\n    //     circle,\n    //     polyline,\n    //     multiPolyline,\n    //     rectangle,\n    //     polygon,\n    //     holedPolygon,\n    //     multiPolygon,\n    //     holedMultiPolygon,\n    // ];\n    //\n    // const featureGroup = L.featureGroup(layers).addTo(map);\n    // map.fitBounds(featureGroup.getBounds(), { animate: false });\n    //\n    // function resetSelectedState() {\n    //     map.eachLayer(layer => {\n    //         if (layer instanceof L.Marker) {\n    //             layer.setIcon(new L.Icon.Default());\n    //         } else if (layer instanceof L.Path) {\n    //             layer.setStyle({ color: '#3388ff' });\n    //         }\n    //     });\n    //\n    //     lassoResult.innerHTML = '';\n    // }\n    // function setSelectedLayers(layers) {\n    //     resetSelectedState();\n    //\n    //     layers.forEach(layer => {\n    //         if (layer instanceof L.Marker) {\n    //             layer.setIcon(new L.Icon.Default({ className: 'selected '}));\n    //         } else if (layer instanceof L.Path) {\n    //             layer.setStyle({ color: '#ff4620' });\n    //         }\n    //     });\n    //\n    //     lassoResult.innerHTML = layers.length ? `Selected ${layers.length} layers` : '';\n    // }\n    //\n    // map.on('mousedown', () => {\n    //     resetSelectedState();\n    // });\n    // map.on('lasso.finished', event => {\n    //     setSelectedLayers(event.layers);\n    // });\n    // map.on('lasso.enabled', () => {\n    //     lassoEnabled.innerHTML = 'Enabled';\n    //     resetSelectedState();\n    // });\n    // map.on('lasso.disabled', () => {\n    //     lassoEnabled.innerHTML = 'Disabled';\n    // });\n    //\n    // toggleLasso.addEventListener('click', () => {\n    //     if (lassoControl.enabled()) {\n    //         lassoControl.disable();\n    //     } else {\n    //         lassoControl.enable();\n    //     }\n    // });\n    // contain.addEventListener('change', () => {\n    //     lassoControl.setOptions({ intersect: intersect.checked });\n    // });\n    // intersect.addEventListener('change', () => {\n    //     lassoControl.setOptions({ intersect: intersect.checked });\n    // });\n\n\n\n\n    // let coords = [];\n    // function onEachFeature1(feature, layer) {\n    //     var popupContent = \"\" + feature.geometry.coordinates\n    //\n    //     // if (feature.properties && feature.properties.popupContent) {\n    //     //     popupContent += feature.properties.popupContent;\n    //     // }\n    //     if (flag === 1){\n    //         coords.push({data:feature.geometry.coordinates});\n    //     }\n    //     layer.bindPopup(popupContent);\n    // }\n    // function onEachFeature(feature, layer) {\n    //     var popupContent = \"\" + feature.geometry.coordinates\n    //\n    //     // if (feature.properties && feature.properties.popupContent) {\n    //     //     popupContent += feature.properties.popupContent;\n    //     // }\n    //\n    //     layer.bindPopup(popupContent);\n    // }\n    //\n    //     let type_list = type;\n    // let radius_mm = radius;\n    //\n    // let testData = {\n    //     max: 13,\n\n    // };\n    //\n    //\n    // let cfg = {\n    //     // radius should be small ONLY if scaleRadius is true (or small radius is intended)\n    //     // if scaleRadius is false it will be the constant radius used in pixels\n    //     \"radius\": 0.003,\n    //     \"maxOpacity\": .6,\n    //     // scales the radius based on map zoom\n    //     \"scaleRadius\": true,\n    //     // if set to false the heatmap uses the global maximum for colorization\n    //     // if activated: uses the data maximum within the current map boundaries\n    //     //   (there will always be a red spot with useLocalExtremas true)\n    //     \"useLocalExtrema\": true,\n    //     // which field name in your data represents the latitude - default \"lat\"\n    //     latField: 'lat',\n    //     // which field name in your data represents the longitude - default \"lng\"\n    //     lngField: 'lng',\n    //     // which field name in your data represents the data value - default \"value\"\n    //     valueField: 'count'\n    // };\n    //\n    //\n    // let heatmapLayer = new HeatmapOverlay(cfg);\n    // heatmapLayer.setData(testData);\n    // let baseLayer = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n    //     maxZoom: 13,\n    //     attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n    //         '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n    //         'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    //     id: 'mapbox/streets-v11',\n    //     tileSize: 512,\n    //     zoomOffset: -1\n    // })\n\n    // if (flag ===1) {\n    //     mymap = new L.Map(id, {\n    //         center: new L.LatLng(22.75190354731786, 113.91390510319258),\n    //         zoom: 13,\n    //\n    //     });\n    // }\n    \n    // let pi = L.geoJSON(pipes, {\n    //\n    //     // filter: function (feature, layer) {\n    //     //     if (feature.properties) {\n    //     //         // If the property \"underConstruction\" exists and is true, return false (don't render features under construction)\n    //     //         return feature.properties.underConstruction !== undefined ? !feature.properties.underConstruction : true;\n    //     //     }\n    //     //     return false;\n    //     // },\n    //     style: function (feature) {\n    //         feature.properties.PIPE_MM\n    //         switch (feature.properties.PIPE_KIND) {\n    //             case '钢筋混凝土管': {\n    //                 if (type_list.indexOf('钢筋混凝土管') !== -1 && feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#002aff', weight: 4}\n    //                 else\n    //                     return {opacity: 0}\n    //             }\n    //             case '球墨铸铁管': {\n    //                 if (type_list.indexOf('球墨铸铁管') !== -1 && feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#ff001e', weight: 4}\n    //                 else\n    //                     return {opacity: 0}\n    //             }\n    //             case '钢管': {\n    //                 if (type_list.indexOf('钢管') !== -1 && feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#ecc606', weight: 4}\n    //                 else\n    //                     return {opacity: 0}\n    //             }\n    //             case 'NULL': {\n    //                 if (type_list.indexOf('NULL') !== -1 && feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#e600ff', weight: 4}\n    //                 else\n    //                     return {opacity: 0}\n    //             }\n    //             case 'PE管': {\n    //                 if (type_list.indexOf('PE管') !== -1 && feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#44ff00', weight: 4}\n    //                 else\n    //                     return {opacity: 0}\n    //             }\n    //             default: {\n    //                 if (feature.properties.PIPE_MM <= radius_mm)\n    //                     return {color: '#ff7700', weight: 4}\n    //             }\n    //         }\n    //     },\n    //     onEachFeature: onEachFeature\n    // });\n    // let po = L.geoJSON(points, {\n    //     style: function (feature) {\n    //         return feature.properties && feature.properties.style;\n    //     },\n    //\n    //     onEachFeature: onEachFeature1,\n    //\n    //     pointToLayer: function (feature, latlng) {\n    //         return L.circleMarker(latlng, {\n    //             radius: 3,\n    //             fillColor: \"#0a0a0a\",\n    //             color: \"#000\",\n    //             weight: 1,\n    //             opacity: 1,\n    //             fillOpacity: 0.8\n    //         });\n    //     }\n    // });\n    // // console.log(points.features.geometry.coordinates);\n    // mymap.eachLayer(function(layer){\n    //     mymap.removeLayer(layer);\n    // });\n\n    // mymap.addLayer(pi);\n    // mymap.addLayer(po);\n    // mymap.addLayer(heatmapLayer);\n    // return map;\n// };\n\n// let DrawFace= function (id) {\n// \tthis.id = id\n//     this.svgWidth = $('#' + id).width()\n//     this.svgHeight = $('#' + id).height()\n//     this.margin = { top: 50, right: 100, bottom: 10, left: 100 }\n//     this.width = this.svgWidth - this.margin.left - this.margin.right\n//     this.height = this.svgHeight - this.margin.top - this.margin.bottom\n\n//     this.svg = d3.select('#' + id).append('svg')\n//         .attr('class', 'statisticSvg')\n//         .attr('width', this.svgWidth)\n// \t\t.attr('height', this.svgHeight)\n\n// \tthis.graphContainer = this.svg.append('g')\n// \t\t.attr('class', 'g_main')\n//         .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top + ')')\n\n//     this.emotionList = ['angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral']\n//     this.emotionListAll = ['angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral', 'empty']\n\n//     // origin happy <=> angry\n//     this.emotionColorRange = {\n//         'angry': '#fe6271',\n//         'disgust': '#aa81f3',\n//         'fear': '#45b0e2',\n//         'happy': '#fbca35',\n//         'neutral': '#bdbdbd',\n//         'sad': '#4667cc',\n//         'surprise': '#3ec845'\n//     }\n\n//     this.poseList = ['closePostures', 'openArms', 'openPostures']\n//     this.poseListAll = ['closePostures', 'openArms', 'openPostures', 'empty']\n\n//     this.poseColorRange = {\n//         'closePostures': '#1967A1',\n//         'openArms': '#B31515',\n//         'openPostures': '#F49445'\n//     }\n\n//     // Close postures owing to overlapping hand key points.\n//     // Open arms since both the elbow points cross the torso region and wrist points go outermost.\n//     // Open postures as the hands fall in the torso region.\n\n// }\n\n// DrawFace.prototype.layout = function (data) {\n//     console.log('draw Face data: ', data)  /* eslint-disable-line */\n//     let faceInfo = data['face_info'].map((frameFaceInfo) => {\n//         if (frameFaceInfo['face_info'].length > 0) {\n//             return frameFaceInfo['face_info'][0]['emotion']\n//         } else {\n//             return 'empty'\n//         }\n//     })\n//     // console.log('faceInfo: ', faceInfo)\n\n//     function judgePose (cocoPart) {\n//         // console.log('cocoPart: ', cocoPart)\n//         const distance = (x0, y0, x1, y1) => Math.hypot(x1 - x0, y1 - y0)\n\n//         let Rwrist = cocoPart[4]\n//         let LWrist = cocoPart[7]\n//         let RElbow = cocoPart[3]\n//         let LElbow = cocoPart[6]\n//         let RShoulder = cocoPart[2]\n//         let LShoulder = cocoPart[5]\n\n//         let wristDistance = 0\n//         let elbowDistance = 0\n//         let shoulderDistance = 0\n//         try {\n//             wristDistance = distance(Rwrist[0], Rwrist[1], LWrist[0], LWrist[1])\n//             elbowDistance = distance(RElbow[0], RElbow[1], LElbow[0], LElbow[1])\n//             shoulderDistance = distance(RShoulder[0], RShoulder[1], LShoulder[0], LShoulder[1])\n//         } catch {\n//             return 'empty'\n//         }\n\n//         if (wristDistance < 0.2) {\n//             return 'closePostures'\n//         } else if (elbowDistance > elbowDistance && elbowDistance > shoulderDistance) {\n//             return 'openArms'\n//         } else if (wristDistance < elbowDistance) {\n//             return 'openPostures'\n//         } else {\n//             return 'empty'\n//         }\n//     }\n\n//     let poseInfo = data['pose_info'].map((framePoseInfo) => {\n//         if (framePoseInfo['pose_info'].length > 0) {\n//             return judgePose(framePoseInfo['pose_info'][0])\n//         } else {\n//             return 'empty'\n//         }\n//     })\n\n//     // console.log('poseInfo: ', poseInfo)\n\n//     // emotion\n//     let emotionCount = this.emotionListAll.reduce(function(accumulator, currentValue) {\n//         accumulator[currentValue] = 0\n//         return accumulator\n//     }, {})\n\n//     for (let i=0; i<faceInfo.length; i++) {\n//         emotionCount[faceInfo[i]] += 1\n//     }\n\n//     // let maxEmotionKey = 'empty'\n//     let maxEmotionValue = 0\n//     for (let emotionKey in emotionCount) {\n//         if (emotionCount[emotionKey] > maxEmotionValue) {\n//             maxEmotionValue = emotionCount[emotionKey]\n//             // maxEmotionKey = emotionKey\n//         }\n//     }\n\n//     let widthEmotion = this.width / 3\n//     let heightEmotion = this.height\n\n//     let xScaleEmotion = d3.scaleLinear()\n//             .domain([0, maxEmotionValue])\n//             .range([0, widthEmotion])\n\n//     let yScaleEmotion = d3.scaleBand()\n//         .domain(this.emotionListAll)\n//         .range([0, heightEmotion])\n//         .padding(0.1)\n\n//     let emotionContainer = this.graphContainer.append('g').attr('class', 'emotion')\n//     emotionContainer.append('g').attr('class', 'barchart')\n//         .selectAll()\n//         .data(this.emotionListAll)\n//         .enter()\n//         .append('rect')\n//         .attr('x', 0)\n//         .attr('y', (emotion) => yScaleEmotion(emotion))\n//         .attr('width', (emotion) => xScaleEmotion(emotionCount[emotion]))\n//         .attr('height', yScaleEmotion.bandwidth())\n//         .style('fill', (emotion) => this.emotionColorRange[emotion])\n\n//     emotionContainer.append('g').attr('class', 'x-axis')\n//         .attr('transform', 'translate(' + 0 + ',0)')\n//         .call(d3.axisTop(xScaleEmotion).ticks(5))\n\n//     emotionContainer.append('g').attr('class', 'y-axis')\n//         .attr('transform', 'translate(' + 0 + ',0)')\n//         .call(d3.axisLeft(yScaleEmotion))\n\n//     // pose\n//     let poseCount = this.poseListAll.reduce(function(accumulator, currentValue) {\n//         accumulator[currentValue] = 0\n//         return accumulator\n//     }, {})\n\n//     for (let i=0; i<poseInfo.length; i++) {\n//         poseCount[poseInfo[i]] += 1\n//     }\n//     // let poseCount = {\n//     //     'closePostures': 20,\n//     //     'openArms': 30,\n//     //     'openPostures':10,\n//     //     'empty': 0\n//     // }\n\n//     // let maxPoseKey = 'empty'\n//     let maxPoseValue = 0\n//     for (let poseKey in poseCount) {\n//         if (poseCount[poseKey] > maxPoseValue) {\n//             maxPoseValue = poseCount[poseKey]\n//             // maxPoseKey = poseKey\n//         }\n//     }\n\n//     let widthPose = this.width / 3\n//     let heightPose = this.height\n\n//     let xScalePose = d3.scaleLinear()\n//             .domain([0, maxPoseValue])\n//             .range([0, widthPose])\n\n//     let yScalePose = d3.scaleBand()\n//         .domain(this.poseListAll)\n//         .range([0, heightPose])\n//         .padding(0.1)\n\n//     let poseContainer = this.graphContainer.append('g').attr('class', 'pose')\n//         .attr('transform', 'translate(' + (2 * this.width / 3) + ', ' + 0 + ')')\n//     poseContainer.append('g').attr('class', 'barchart')\n//         .selectAll()\n//         .data(this.poseListAll)\n//         .enter()\n//         .append('rect')\n//         .attr('x', 0)\n//         .attr('y', (pose) => yScalePose(pose))\n//         .attr('width', (pose) => xScalePose(poseCount[pose]))\n//         .attr('height', yScalePose.bandwidth())\n//         .style('fill', (pose) => this.poseColorRange[pose])\n\n//     poseContainer.append('g').attr('class', 'x-axis')\n//         .attr('transform', 'translate(' + 0 + ',0)')\n//         .call(d3.axisTop(xScalePose).ticks(5))\n\n//     poseContainer.append('g').attr('class', 'y-axis')\n//         .attr('transform', 'translate(' + 0 + ',0)')\n//         .call(d3.axisLeft(yScalePose))\n\n// }\n\n// export default init;\n\n\n\n"]}]}